name: update
on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
    inputs:
      incremental_update:
        description: '增量更新'
        required: true
        type: boolean
      bangumi_only:
        description: '只更新bangumi'
        required: false
        type: boolean
permissions:
    contents: write
    discussions: write
jobs:
    ja-wikipedia:
        runs-on: ubuntu-22.04
        if: ${{ !contains(github.event.inputs.bangumi_only, 'true') }}
        steps: 
            - name: 将存储库签出到运行器
              uses: actions/checkout@v3

            - name: 输出运行器硬件信息
              run: |
                bash $GITHUB_WORKSPACE/.github/workflows/scripts/hardware_info.sh

            - name: 克隆工具
              run: |
                mkdir -p workdir
                cd workdir
                git clone https://github.com/chenmozhijin/mediawikiextractor

            - name: 安装依赖
              run: |
                pip install -r $GITHUB_WORKSPACE/workdir/mediawikiextractor/requirements.txt

            - name: 增量更新
              if: ${{ inputs.incremental_update || github.event_name == 'schedule' }}
              run: |
                latest_ver="$(curl -s -L --retry 6 https://api.github.com/repos/${{ github.repository }}/releases 2>/dev/null | grep -E 'tag_name' | sed -e 's/    "tag_name": "//' -e 's/",//' | sed -n '1p')"
                echo latest_ver=$latest_ver
                curl -s -L --retry 6 https://github.com/${{ github.repository }}/releases/download/${latest_ver}/ja-wikipedia.json -o $GITHUB_WORKSPACE/workdir/ja-wikipedia.json -nv

            - name: 运行工具
              run: |
                cd $GITHUB_WORKSPACE/workdir/mediawikiextractor/
                python mediawikiextractor.py --config $GITHUB_WORKSPACE/.github/workflows/config/ja-wikipedia.json --output $GITHUB_WORKSPACE/workdir/ja-wikipedia.json

            - name: 上传维基百科的json文本
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ja-wikipedia-json
                  path: "workdir/ja-wikipedia.json"

    moegirl:
        if: ${{ !contains(github.event.inputs.bangumi_only, 'true') }}
        runs-on: ubuntu-22.04
        steps: 
            - name: 将存储库签出到运行器
              uses: actions/checkout@v3

            - name: 输出运行器硬件信息
              run: |
                bash $GITHUB_WORKSPACE/.github/workflows/scripts/hardware_info.sh

            - name: 克隆工具
              run: |
                mkdir -p workdir
                cd workdir
                git clone https://github.com/chenmozhijin/mediawikiextractor

            - name: 安装依赖
              run: |
                pip install -r $GITHUB_WORKSPACE/workdir/mediawikiextractor/requirements.txt

            - name: 增量更新
              if: ${{ inputs.incremental_update || github.event_name == 'schedule' }}
              run: |
                latest_ver="$(curl -s -L --retry 6 https://api.github.com/repos/${{ github.repository }}/releases 2>/dev/null | grep -E 'tag_name' | sed -e 's/    "tag_name": "//' -e 's/",//' | sed -n '1p')"
                echo latest_ver=$latest_ver
                curl -s -L --retry 6 https://github.com/${{ github.repository }}/releases/download/${latest_ver}/moegirl.json -o $GITHUB_WORKSPACE/workdir/moegirl.json -nv

            - name: 运行工具
              run: |
                cd $GITHUB_WORKSPACE/workdir/mediawikiextractor/
                python mediawikiextractor.py --config $GITHUB_WORKSPACE/.github/workflows/config/moegirl.json --output $GITHUB_WORKSPACE/workdir/moegirl.json

            - name: 上传萌娘百科的json文本
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: moegirl-json
                  path: "workdir/moegirl.json"

    bangumi-Name-Glossary:
      runs-on: ubuntu-22.04
      steps: 
            - name: 将存储库签出到运行器
              uses: actions/checkout@v3
        
            - name: 输出运行器硬件信息
              run: |
                bash $GITHUB_WORKSPACE/.github/workflows/scripts/hardware_info.sh

            - uses: actions/setup-python@v5
              with:
                python-version: 3.11
                architecture: x64

            - name: 安装依赖
              run: |
                pip install requests tqdm

            - name: 运行脚本
              run: |
                python $GITHUB_WORKSPACE/.github/workflows/scripts/bangumi_get_name_glossary.py

            - name: 上传文件
              uses: actions/upload-artifact@v3
              with:
                  name: bangumi-Name-Glossary
                  path: "character.jsonl"


    push: 
        if: ${{ !contains(github.event.inputs.bangumi_only, 'true') }}
        needs: [ja-wikipedia,moegirl,bangumi-Name-Glossary]
        runs-on: ubuntu-22.04
        steps:
          - name: 将存储库签出到运行器
            uses: actions/checkout@v3
            with:
                path: push

          - name: 下载zh-wikipedia-json文本
            uses: actions/download-artifact@v3
            with:
                name: ja-wikipedia-json

          - name: 下载moegirl-json文本
            uses: actions/download-artifact@v3
            with:
                name: moegirl-json

          - name: 下载bangumi-Name-Glossary-json文本
            uses: actions/download-artifact@v3
            with:
                name: bangumi-Name-Glossary

          - name: 复制与拆分
            run: |
                mkdir -p push/data
                mkdir -p upload/data
                cp -f ja-wikipedia.json upload/data/ja-wikipedia.json
                cp -f moegirl.json upload/data/moegirl.json
                cp -f character.jsonl upload/data/bangumi-character.jsonl
                cp -f character.jsonl push/data/bangumi-character.jsonl
                python $GITHUB_WORKSPACE/push/.github/workflows/scripts/json_to_files.py ja-wikipedia.json push/data/ja-wikipedia
                python $GITHUB_WORKSPACE/push/.github/workflows/scripts/json_to_files.py moegirl.json push/data/moegirl

          - name: 推送
            id: push
            run: |
                cd push
                git config user.name "github-actions[bot]"
                git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git add .
                git commit -m "更新于$(TZ='Asia/Shanghai' date +%Y/%m/%d/%H:%M)" && git push &&  echo "upload=true" >> "$GITHUB_OUTPUT" ||echo "upload=false" >> "$GITHUB_OUTPUT"
                cat $GITHUB_OUTPUT

          - name: 生成 release 相关信息
            id: release-info
            if: steps.push.outputs.upload == 'true'
            run: |
              echo 爬取完成于$(date +"%Y-%m-%d %H:%M") >> upload/release.txt
              echo "RELEASE_NAME=VisualNovel-Dataset v$(date +"%y.%m.%d-%H%M")" >> "$GITHUB_OUTPUT"
              echo "RELEASE_TAG_NAME=v$(date +"%y.%m.%d-%H%M")" >> "$GITHUB_OUTPUT"
              

          - name: 上传json到 Release
            if: steps.push.outputs.upload == 'true'
            uses: softprops/action-gh-release@v0.1.15
            with:
             name: ${{ steps.release-info.outputs.RELEASE_NAME }}
             tag_name: ${{ steps.release-info.outputs.RELEASE_TAG_NAME }}
             files: upload/data/*
             body_path: upload/release.txt

          - name: 检测
            run: ls -la $(find $GITHUB_WORKSPACE -type d)
